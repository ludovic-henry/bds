<?php

/**
 * BasecoCotisant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property phPhoto $phPhoto
 * @property Doctrine_Collection $spSports
 * @property Doctrine_Collection $spParticipants
 * @property Doctrine_Collection $acCommentaires
 * @property Doctrine_Collection $acActualites
 * @property Doctrine_Collection $gaActivites
 * @property Doctrine_Collection $gaActivite
 * @property Doctrine_Collection $gaParticipants
 * @property Doctrine_Collection $mlMails
 * @property Doctrine_Collection $mlMailingLists
 * @property Doctrine_Collection $mlMailingListDestinataire
 * 
 * @method phPhoto             getPhPhoto()                   Returns the current record's "phPhoto" value
 * @method Doctrine_Collection getSpSports()                  Returns the current record's "spSports" collection
 * @method Doctrine_Collection getSpParticipants()            Returns the current record's "spParticipants" collection
 * @method Doctrine_Collection getAcCommentaires()            Returns the current record's "acCommentaires" collection
 * @method Doctrine_Collection getAcActualites()              Returns the current record's "acActualites" collection
 * @method Doctrine_Collection getGaActivites()               Returns the current record's "gaActivites" collection
 * @method Doctrine_Collection getGaActivite()                Returns the current record's "gaActivite" collection
 * @method Doctrine_Collection getGaParticipants()            Returns the current record's "gaParticipants" collection
 * @method Doctrine_Collection getMlMails()                   Returns the current record's "mlMails" collection
 * @method Doctrine_Collection getMlMailingLists()            Returns the current record's "mlMailingLists" collection
 * @method Doctrine_Collection getMlMailingListDestinataire() Returns the current record's "mlMailingListDestinataire" collection
 * @method coCotisant          setPhPhoto()                   Sets the current record's "phPhoto" value
 * @method coCotisant          setSpSports()                  Sets the current record's "spSports" collection
 * @method coCotisant          setSpParticipants()            Sets the current record's "spParticipants" collection
 * @method coCotisant          setAcCommentaires()            Sets the current record's "acCommentaires" collection
 * @method coCotisant          setAcActualites()              Sets the current record's "acActualites" collection
 * @method coCotisant          setGaActivites()               Sets the current record's "gaActivites" collection
 * @method coCotisant          setGaActivite()                Sets the current record's "gaActivite" collection
 * @method coCotisant          setGaParticipants()            Sets the current record's "gaParticipants" collection
 * @method coCotisant          setMlMails()                   Sets the current record's "mlMails" collection
 * @method coCotisant          setMlMailingLists()            Sets the current record's "mlMailingLists" collection
 * @method coCotisant          setMlMailingListDestinataire() Sets the current record's "mlMailingListDestinataire" collection
 * 
 * @package    BDS
 * @subpackage model
 * @author     Ludovic Henry
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasecoCotisant extends sfGuardUser
{
    public function setUp()
    {
        parent::setUp();
        $this->hasOne('phPhoto', array(
             'local' => 'photo_id',
             'foreign' => 'id',
             'onDelete' => 'set null',
             'onUpdate' => 'cascade'));

        $this->hasMany('spSport as spSports', array(
             'refClass' => 'spParticipant',
             'local' => 'cotisant_id',
             'foreign' => 'sport_id'));

        $this->hasMany('spParticipant as spParticipants', array(
             'local' => 'id',
             'foreign' => 'cotisant_id'));

        $this->hasMany('acCommentaire as acCommentaires', array(
             'local' => 'id',
             'foreign' => 'cotisant_id'));

        $this->hasMany('acActualite as acActualites', array(
             'local' => 'id',
             'foreign' => 'cotisant_id'));

        $this->hasMany('gaActivite as gaActivites', array(
             'refClass' => 'gaParticipant',
             'local' => 'cotisant_id',
             'foreign' => 'activite_id'));

        $this->hasMany('gaActivite', array(
             'local' => 'id',
             'foreign' => 'contact_id'));

        $this->hasMany('gaParticipant as gaParticipants', array(
             'local' => 'id',
             'foreign' => 'cotisant_id'));

        $this->hasMany('mlMail as mlMails', array(
             'local' => 'id',
             'foreign' => 'cotisant_id'));

        $this->hasMany('mlMailingList as mlMailingLists', array(
             'refClass' => 'mlMailingListDestinataire',
             'local' => 'cotisant_id',
             'foreign' => 'list_id'));

        $this->hasMany('mlMailingListDestinataire', array(
             'local' => 'id',
             'foreign' => 'cotisant_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'name' => 'slug',
             'unique' => true,
             'fields' => 
             array(
              0 => 'prenom',
              1 => 'nom',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}