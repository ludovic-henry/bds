spSport:
  tableName: sp_sports
  actAs:
    Timestampable: ~
    Sluggable:
      name: slug
      fields: [nom]
      unique: true
      canUpdate: true
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    nom: { type: string, notnull: true }
    description: { type: string, notnull: true }
    materiel: { type: string }
    is_actif: { type: boolean, notnull: true, default: false }
    is_visible: { type: boolean, notnull: true, default: false }
  relations:
    phPhotos:
      class: phPhoto
      foreignAlias: spSports
      refClass: spPhoto
      local: sport_id
      foreign: photo_id
    coCotisants:
      class: coCotisant
      refClass: spParticipant
      local: sport_id
      foreign: cotisant_id
      foreignAlias: spSports

spPhoto:
  tableName: sp_photos
  columns:
    sport_id: { type: integer, primary: true }
    photo_id: { type: integer, primary: true }
  relations:
    sport:
      class: spSport
      local: sport_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
    phPhoto:
      local: photo_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade

spHoraireStatut:
  tableName: sp_horaires_statuts
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    nom: { type: string, notnull: true }
    couleur: { type: string(6), notnull: true, default: '00FF00' }
    is_ouvert: { type: boolean, notnull: true, default: true }

spParticipant:
  tableName: sp_participants
  columns:
    sport_id: { type: integer, primary: true }
    cotisant_id: { type: integer, primary: true }
    statut: { type: enum, notnull: true, default: Participant, values: [Participant, Responsable] }
    is_admin: { type: boolean, notnull: true, default: false }
  relations:
    coCotisant:
      local: cotisant_id
      foreign: id
      foreignAlias: spParticipants
      onDelete: cascade
      onUpdate: cascade
    sport:
      class: spSport
      local: sport_id
      foreign: id
      foreignAlias: participants
      onDelete: cascade
      onUpdate: cascade

spHoraire:
  tableName: sp_horaires
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    sport_id: { type: integer, notnull: true }
    salle_id: { type: integer, notnull: true }
    statut_id: { type: integer, notnull: true, default: 1 }
    jour: { type: integer, notnull: true }
    heure_debut: { type: time, notnull: true }
    heure_fin: { type: time, notnull: true }
  relations:
    sport:
      class: spSport
      local: sport_id
      foreign: id
      foreignAlias: horaires
      onDelete: cascade
      onUpdate: cascade
    salle:
      class: spSalle
      local: salle_id
      foreign: id
      foreignAlias: horaires
      onDelete: cascade
      onUpdate: cascade
    statut:
      class: spHoraireStatut
      local: statut_id
      foreign: id
      foreignAlias: horaires
      onDelete: set default
      onUpdate: cascade
  checks:
    heure_check: heure_fin > heure_debut

spSalle:
  tableName: sp_salles
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    nom: { type: string, notnull: true }
    ville: { type: string, notnull: true }
    adresse: { type: string, notnull: true }
    latitude: { type: float }
    longitude: { type: float }

acCommentaire:
  tableName: ac_commentaires
  actAs: [Timestampable]
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    actualite_id: { type: integer, notnull: true }
    cotisant_id: { type: integer }
    contenu: { type: string, notnull: true }
  relations:
    actualite:
      class: acActualite
      local: actualite_id
      foreign: id
      foreignAlias: commentaires
      onDelete: cascade
      onUpdate: cascade
    coCotisant:
      local: cotisant_id
      foreign: id
      foreignAlias: acCommentaires
      onDelete: set null
      onUpdate: cascade

acActualite:
  tableName: ac_actualites
  actAs:
    Timestampable: ~
    Sluggable:
      name: slug
      fields: [titre]
      unique: true
      canUpdate: true
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    cotisant_id: { type: integer }
    titre: { type: string, notnull: true }
    contenu: { type: string, notnull: true }
    is_visible: { type: boolean, notnull: true, default: false }
  relations:
    tags:
      class: acTag
      foreignAlias: actualites
      refClass: acActualiteTag
      local: actualite_id
      foreign: tag_id
    coCotisant:
      local: cotisant_id
      foreign: id
      foreignAlias: acActualites
      onDelete: set null
      onUpdate: cascade

acTag:
  tableName: ac_tags
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    nom: { type: string, notnull: true }

acActualiteTag:
  tableName: ac_actualites_tags
  columns:
    actualite_id: { type: integer, primary: true }
    tag_id: { type: integer, primary: true }
  relations:
    tag:
      class: acTag
      local: tag_id
      foreign: id
      foreignAlias: actualiteTags
      onDelete: cascade
      onUpdate: cascade
    actualite:
      class: acActualite
      local: actualite_id
      foreign: id
      foreignAlias: actualiteTags
      onDelete: cascade
      onUpdate: cascade

gaActivite:
  tableName: ga_activites
  actAs:
    Sluggable:
      name: slug
      fields: [nom]
      unique: true
      canUpdate: true
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    contact_id: { type: integer  }
    nom: { type: string, notnull: true }
    lieu: { type: string, notnull: true }
    site: { type: string }
    description: { type: string, notnull: true }
    date_debut: { type: timestamp, notnull: true }
    date_fin: { type: timestamp, notnull: true }
    is_visible: { type: boolean, notnull: true, default: false }
  relations:
    phPhotos:
      class: phPhoto
      refClass: gaPhoto
      local: activite_id
      foreign: photo_id
      foreignAlias: gaActivites
    coCotisants:
      class: coCotisant
      refClass: gaParticipant
      local: activite_id
      foreign: cotisant_id
      foreignAlias: gaActivites
    contact:
      class: coCotisant
      local: contact_id
      foreign: id
      onDelete: set null
      onUpdate: cascade
  checks:
    date_check: date_fin > date_debut

gaParticipant:
  tableName: ga_participants
  columns:
    activite_id: { type: integer, primary: true }
    cotisant_id: { type: integer, primary: true }
    statut: { type: enum, notnull: true, default: Participant, values: [Participant, Responsable] }
    is_admin: { type: boolean, notnull: true, default: false }
  relations:
    coCotisant:
      local: cotisant_id
      foreign: id
      foreignAlias: gaParticipants
      onDelete: cascade
      onUpdate: cascade
    activite:
      class: gaActivite
      local: activite_id
      foreign: id
      foreignAlias: participants
      onDelete: cascade
      onUpdate: cascade

gaPhoto:
  tableName: ga_photos
  columns:
    activite_id: { type: integer, primary: true, notnull: true }
    photo_id: { type: integer, primary: true, notnull: true }
  relations:
    activite:
      class: gaActivite
      local: activite_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
    phPhoto:
      local: photo_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade

phPhoto:
  tableName: ph_photos
  actAs:
    Timestampable: ~
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    filename: { type: string, notnull: true }
    content_type: { type: string, notnull: true }

coCotisant:
#  tableName: co_cotisants
  inheritance:
    extends: sfGuardUser
    type: simple
  actAs:
    Sluggable:
      name: slug
      unique: true
      fields: [prenom, nom]
      canUpdate: true
  columns:
    photo_id: { type: integer, unique: true }
    is_actif: { type: boolean, default: 1 }
    nom: { type: string, notnull: true }
    prenom: { type: string, notnull: true }
    email: { type: string(255), notnull: true, unique: true }
    semestre_debut_cotisation: { type: string(3), notnull: true }
    semestre_fin_cotisation: { type: string(3), notnull: true }
    date_certificat: { type: date, notnull: true }
    certificat: { type: string }
    certificat_content_type: { type: string }
  relations:
    phPhoto:
      local: photo_id
      foreign: id
      type: one
      foreignType: one
      foreignAlias: coCotisant
      onUpdate: cascade
      onDelete: set null

mlMail:
  tableName: ml_mails
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    cotisant_id: { type: integer }
    objet: { type: string, notnull: true }
    destinataires: { type: string, notnull: true, default: 'Aucun destinaraires' }
    contenu: { type: string, notnull: true }
    sent_at: { type: timestamp }
  relations:
  relations:
    coCotisant:
      local: cotisant_id
      foreign: id
      foreignAlias: mlMails
      onUpdate: cascade
      onDelete: set null

mlWeekmail:
  inheritance:
    extends: mlMail
    type: column_aggregation

mlSport:
  inheritance:
    extends: mlMail
    type: column_aggregation
  columns:
    sport_id: { type: integer }
  relations:
    spSport:
      local: sport_id
      foreign: id
      foreignAlias: mlMails
      onUpdate: cascade
      onDelete: set null

mlActivite:
  inheritance:
    extends: mlMail
    type: column_aggregation
  columns:
    activite_id: { type: integer }
  relations:
    gaActivite:
      local: activite_id
      foreign: id
      foreignAlias: mlMails
      onUpdate: cascade
      onDelete: set null

mlAttachment:
  tableName: ml_attachments
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    mail_id: { type: integer, notnull: true }
    filename: { type: string, notnull: true }
    nom: { type: string, notnull: true }
  relations:
    weekmail:
      class: mlWeekmail
      local: mail_id
      foreign: id
      foreignAlias: attachments
      onUpdate: cascade
      onDelete: cascade

mlMailingList:
  tableName: ml_mailing_lists
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    nom: { type: string, unique: true }
  relations:
    coCotisants:
      class: coCotisant
      foreignAlias: mlMailingLists
      refClass: mlMailingListDestinataire
      local: list_id
      foreign: cotisant_id

mlMailingListDestinataire:
  tableName: ml_mailing_lists_destinataires
  columns:
    list_id: { type: integer, primary: true }
    cotisant_id: { type: integer, primary: true }
  relations:
    coCotisant:
      local: cotisant_id
      foreign: id
      onUpdate: cascade
      onDelete: cascade
    list:
      class: mlMailingList
      local: list_id
      foreign: id
      foreignAlias: cotisant
      onUpdate: cascade
      onDelete: cascade

elElection:
  tableName: el_elections
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    nom: { type: string, notnull: true }
    description: { type: string }
    date_debut: { type: timestamp, notnull: true, default: now() }
    date_fin: { type: timestamp, notnull: true }
  check:
    date_check: date_fin > date_debut

elPoste:
  tableName: el_postes
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    nom: { type: string, notnull: true }
    description: { type: string }

elListe:
  tableName: el_listes
  columns:
    id: { type: integer, primary: true, autoincremennt: true }
    poste_id: { type: integer, notnull: true }
    election_id: { type: integer, notnull: true }
    description: { type: string, notnull: true }
  relations:
    poste:
      class: elPoste
      local: poste_id
      foreign: id
      onUpdate: cascade
      onDelete: cascade
    election:
      class: elElection
      local: election_id
      foreign: id
      onUpdate: cascade
      onDelete: cascade
    coCotisants:
      class: coCotisant
      foreignAlias: elListes
      refClass: elCandidat
      local: liste_id
      foreign: cotisant_id

elCandidat:
  tableName: el_listes_cotisants
  columns:
    liste_id: { type: integer, primary: true }
    cotisant_id: { type: integer, primary: true }
  relations:
    coCotisant:
      local: cotisant_id
      foreign: id
      onUpdate: cascade
      onDelete: cascade
    liste:
      class: elListe
      local: liste_id
      foreign: id
      onUpdate: cascade
      onDelete: cascade

elVote:
  tableName: el_votes
  columns:
    liste_id: { type: integer, primary: true }
    cotisant_id: { type: integer, primary: true }
  relations:
    coCotisant:
      local: cotisant_id
      foreign: id
      onUpdate: cascade
      onDelete: cascade
    liste:
      class: elListe
      local: liste_id
      foreign: id
      onUpdate: cascade
      onDelete: cascade